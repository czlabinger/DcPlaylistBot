using System;
using System.Collections.Generic;
using System.IO;
using System.IO.Pipes;
using System.Text;
using System.Threading.Tasks;
using BeatSaberMarkupLanguage;
using BeatSaberMarkupLanguage.MenuButtons;
using BeatSaberMarkupLanguage.Util;
using DcPlaylistPlugin.Commands;
using DcPlaylistPlugin.Util;
using DcPlaylistPlugin.Util.Playlist;
using IPA;
using IPA.Loader;
using SongCore;
using UnityEngine.SceneManagement;
using IpaLogger = IPA.Logging.Logger;

namespace DcPlaylistPlugin;

[Plugin(RuntimeOptions.DynamicInit)]
internal class Plugin {
    internal static IpaLogger Log { get; private set; } = null!;
    private static UI.SettingsFlowCoordinator? _settingsFlowCoordinator;
    private static MenuButton? _menuButton;
    
    [Init]
    public Plugin(IpaLogger ipaLogger, PluginMetadata pluginMetadata) {
        Log = ipaLogger;
        Log.Info($"{pluginMetadata.Name} {pluginMetadata.HVersion} initialized.");
    }

    [OnStart]
    public void OnApplicationStart() {
        Log.Debug("OnApplicationStart");
        StartListening();
        SetupSceneChangeHook();
        BotHelper.StartBotProcess();

        MainMenuAwaiter.MainMenuInitializing += () => {
            _settingsFlowCoordinator = BeatSaberUI.CreateFlowCoordinator<UI.SettingsFlowCoordinator>();
            _menuButton = new MenuButton("Dc Playlist Plugin", () => {
                BeatSaberUI.MainFlowCoordinator.PresentFlowCoordinator(_settingsFlowCoordinator);
            });
            MenuButtons.Instance.RegisterButton(_menuButton);
        };

        if (Util.Playlist.PlaylistManager.GetPlaylist("DcPlaylistBot") != null) return;
        
        Playlist p = new Playlist("DcPlaylistBot", "DcPlaylistBot", 
            "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",
            []
        );
        Util.Playlist.PlaylistManager.SavePlaylist(p);
    }

    [OnExit]
    public void OnApplicationQuit() {
        Log.Debug("OnApplicationQuit");
        SendToBot("Quit");
    }

    private static void StartListening() {
        var pipeServer = new NamedPipeServerStream(
            "DcPlaylistPlugin",
            PipeDirection.InOut,
            NamedPipeServerStream.MaxAllowedServerInstances,
            PipeTransmissionMode.Byte,
            PipeOptions.Asynchronous);

        pipeServer.BeginWaitForConnection(asyncResult => {
            try {
                StartListening();

                CommandHandler.HandleCommand(asyncResult)
                    .ContinueWith(task => {
                        if (task.Exception != null)
                            Log.Error($"Error in pipe connection: {task.Exception}");
                    }, TaskContinuationOptions.OnlyOnFaulted);
            }
            catch (Exception ex) {
                Log.Error($"Error in pipe connection: {ex}");
            }
        }, pipeServer);
    }

    private static void SetupSceneChangeHook() {
        SceneManager.activeSceneChanged += (arg0, scene) => {
            if (Commands.Commands.ReloadNeeded && SceneManager.GetActiveScene().name == "MainMenu") {
                Loader.Instance.RefreshSongs();

                Commands.Commands.ReloadNeeded = false;
            }
        };
    }

    internal static void SendToBot(string message) {
        try {
            using (var client = new NamedPipeClientStream(".", "DcPlaylistBot",
                       PipeDirection.InOut, PipeOptions.Asynchronous)) {
                client.Connect();

                using (var writer = new StreamWriter(client, Encoding.ASCII, 1024, true) { AutoFlush = true }) {
                    writer.WriteLine(message);
                }
            }
        }
        catch (IOException) { }
    }
}